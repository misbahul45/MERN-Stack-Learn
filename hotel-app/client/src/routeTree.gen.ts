/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as ListImport } from './routes/list'
import { Route as ForgotPasswordImport } from './routes/forgot-password'
import { Route as CreatePostImport } from './routes/create-post'
import { Route as ContactImport } from './routes/contact'
import { Route as AgentsImport } from './routes/agents'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ProfileIdImport } from './routes/profile.$id'
import { Route as PostsSlugImport } from './routes/posts.$slug'
import { Route as AuthSignUpImport } from './routes/_auth/sign-up'
import { Route as AuthSignInImport } from './routes/_auth/sign-in'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const ListRoute = ListImport.update({
  path: '/list',
  getParentRoute: () => rootRoute,
} as any)

const ForgotPasswordRoute = ForgotPasswordImport.update({
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const CreatePostRoute = CreatePostImport.update({
  path: '/create-post',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AgentsRoute = AgentsImport.update({
  path: '/agents',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIdRoute = ProfileIdImport.update({
  path: '/profile/$id',
  getParentRoute: () => rootRoute,
} as any)

const PostsSlugRoute = PostsSlugImport.update({
  path: '/posts/$slug',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/agents': {
      id: '/agents'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof AgentsImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/create-post': {
      id: '/create-post'
      path: '/create-post'
      fullPath: '/create-post'
      preLoaderRoute: typeof CreatePostImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/list': {
      id: '/list'
      path: '/list'
      fullPath: '/list'
      preLoaderRoute: typeof ListImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof rootRoute
    }
    '/posts/$slug': {
      id: '/posts/$slug'
      path: '/posts/$slug'
      fullPath: '/posts/$slug'
      preLoaderRoute: typeof PostsSlugImport
      parentRoute: typeof rootRoute
    }
    '/profile/$id': {
      id: '/profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof ProfileIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AboutRoute,
  AgentsRoute,
  ContactRoute,
  CreatePostRoute,
  ForgotPasswordRoute,
  ListRoute,
  SettingsRoute,
  AuthSignInRoute,
  AuthSignUpRoute,
  PostsSlugRoute,
  ProfileIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/agents",
        "/contact",
        "/create-post",
        "/forgot-password",
        "/list",
        "/settings",
        "/_auth/sign-in",
        "/_auth/sign-up",
        "/posts/$slug",
        "/profile/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/agents": {
      "filePath": "agents.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/create-post": {
      "filePath": "create-post.tsx"
    },
    "/forgot-password": {
      "filePath": "forgot-password.tsx"
    },
    "/list": {
      "filePath": "list.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/_auth/sign-in": {
      "filePath": "_auth/sign-in.tsx"
    },
    "/_auth/sign-up": {
      "filePath": "_auth/sign-up.tsx"
    },
    "/posts/$slug": {
      "filePath": "posts.$slug.tsx"
    },
    "/profile/$id": {
      "filePath": "profile.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
