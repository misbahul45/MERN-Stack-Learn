// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  email     String      @unique
  username  String      @unique
  password  String
  avatar    String?
  createdAt DateTime    @default(now())
  Post      Post[]
  savedPost SavedPost[]
}

model Post {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  slug       String      @unique
  price      Int
  imgs       String[]
  address    String
  city       String
  bedroom    Int
  bathroom   Int
  createdAt  DateTime    @default(now())
  latitude   String
  longitude  String
  type       String
  property   String
  User       User?       @relation(fields: [userId], references: [id])
  userId     String?     @db.ObjectId
  postDetail PostDetail?
  SavedPost  SavedPost[]
}

model PostDetail {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  desc       String
  utilities  String?
  pet        String?
  income     String?
  size       Int?
  school     Int?
  bus        Int?
  restaurant Int?
  post       Post?   @relation(fields: [postId], references: [id])
  postId     String  @unique @db.ObjectId
}

model SavedPost {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  post   Post?  @relation(fields: [postId], references: [id])
  user   User?  @relation(fields: [userId], references: [id])
  postId String @unique @db.ObjectId
  userId String @unique @db.ObjectId

  @@unique([postId, userId])
}
